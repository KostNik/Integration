<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:int-http="http://www.springframework.org/schema/integration/http"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/integration
           http://www.springframework.org/schema/integration/spring-integration.xsd
           http://www.springframework.org/schema/integration/http
           http://www.springframework.org/schema/integration/http/spring-integration-http-5.1.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <context:annotation-config/>

    <context:component-scan base-package="com.edu.sandbox.weather"/>

    <context:property-placeholder
            location="com/edu/sandbox/weather/weatherprediction.properties"
            ignore-resource-not-found="false"/>

    <int:gateway id="weatherRequestGateway"
                 default-request-channel="weatherQueryChannel"
                 service-interface="com.edu.sandbox.weather.gateway.WeatherRequestGateway"/>


    <int:chain input-channel="weatherQueryChannel"
               output-channel="wsOutboundChannel"
               id="weatherQueryMessageChain">

        <int:transformer id="queryToMessageTransformer"
                         method="transformToMessage"
                         ref="weatherQueryToMessageTransformer"/>

        <bean id="weatherQueryToMessageTransformer"
              class="com.edu.sandbox.weather.transformers.WeatherQueryToMessageTransformer"/>

        <int:header-enricher id="weatherMessageParamsEnricher">
            <int:header name="APP_ID" expression="${openweathermap.api.key}"/>
            <int:correlation-id value="CITY"/>
        </int:header-enricher>

    </int:chain>

    <int:channel id="wsOutboundChannel"/>

    <util:constant static-field="com.edu.sandbox.weather.Constants.CITY_KEY" id="CITY_KEY"/>
    <util:constant static-field="com.edu.sandbox.weather.Constants.COUNTRY_KEY" id="COUNTRY_KEY"/>

    <!--    <int:channel id="wsOutboundChannelJSON"/>-->
    <!--    <int:header-enricher input-channel="wsOutboundChannel"-->
    <!--                         output-channel="wsOutboundChannelJSON">-->
    <!--        <int:header name="contentType" value="application/json" overwrite="true"/>-->
    <!--    </int:header-enricher>-->

    <int-http:outbound-gateway id="weatherServiceAdapter"
                               charset="UTF-8"
                               http-method="GET"
                               reply-channel="weatherResultChannel"
                               url-expression="${openweathermap.host}"
                               request-channel="wsOutboundChannel"
                               expected-response-type="com.edu.sandbox.weather.domain.WeatherPrediction">

        <int-http:uri-variable name="city" expression="headers.get(@CITY_KEY)"/>
        <int-http:uri-variable name="appid" expression="headers.get('APP_ID')"/>
        <int-http:uri-variable name="country" expression="headers.get(@COUNTRY_KEY)"/>
    </int-http:outbound-gateway>

    <!--    <util:list id="converters">-->
    <!--        <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />-->
    <!--        <bean class="org.springframework.http.converter.StringHttpMessageConverter" />-->
    <!--        <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />-->
    <!--    </util:list>-->

    <int:publish-subscribe-channel id="weatherResultChannel"
                                   task-executor="executor"
                                   max-subscribers="2"
                                   datatype="com.edu.sandbox.weather.domain.WeatherPrediction"/>

    <bean id="executor" class="org.springframework.scheduling.config.TaskExecutorFactoryBean"/>


    <int:channel id="infoChannel"/>
    <int:service-activator input-channel="weatherResultChannel"
                           id="infoService"
                           method="printData"
                           ref="infoServiceActivator"/>
    <bean id="infoServiceActivator" class="com.edu.sandbox.weather.serviceactivators.InfoServiceActivator"/>


    <!--    <int:publish-subscribe-channel id="errorChannel" error-handler="errorHandler" task-executor="executor"/>-->

    <int:channel id="weatherQueryChannel"/>


</beans>