<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:int-http="http://www.springframework.org/schema/integration/http"
       xmlns:util="http://www.springframework.org/schema/util" xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/integration
           http://www.springframework.org/schema/integration/spring-integration.xsd
           http://www.springframework.org/schema/integration/http
           http://www.springframework.org/schema/integration/http/spring-integration-http-5.1.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">

    <context:annotation-config/>

    <context:component-scan base-package="com.edu.sandbox.weather"/>

    <util:constant static-field="com.edu.sandbox.weather.Constants.APP_ID" id="appIDKey"/>
    <util:constant static-field="com.edu.sandbox.weather.Constants.CITY_KEY" id="cityKey"/>
    <util:constant static-field="com.edu.sandbox.weather.Constants.COUNTRY_KEY" id="countryKey"/>

    <context:property-placeholder
            location="classpath:com/edu/sandbox/weather/weatherprediction.properties"
            ignore-resource-not-found="false"/>

    <int:gateway id="weatherRequestGateway"
                 default-request-channel="weatherQueryChannel"
                 service-interface="com.edu.sandbox.weather.gateway.WeatherRequestGateway"/>

    <int:channel id="weatherQueryChannel"
                 datatype="com.edu.sandbox.weather.WeatherPredictionQuery">
        <int:dispatcher task-executor="taskExecutor"/>
    </int:channel>

    <int:header-enricher input-channel="weatherQueryChannel" output-channel="wsOutboundChannel">
        <int:header name="#{appIDKey}" expression="${openweathermap.api.key}"/>
        <int:header name="#{cityKey}" expression="payload.city"/>
        <int:header name="#{countryKey}" expression="payload.country"/>
        <int:correlation-id expression="payload.city"/>
    </int:header-enricher>

    <int:channel id="wsOutboundChannel">
        <int:queue message-store="weatherQueryMessageStore"/>
    </int:channel>

    <bean id="weatherQueryMessageStore" class="com.edu.sandbox.weather.messagestore.WeatherQueryMessageStore"/>

    <task:executor id="taskExecutor" pool-size="2" keep-alive="10" queue-capacity="5" rejection-policy="DISCARD_OLDEST"/>

    <int-http:outbound-gateway id="weatherServiceAdapter"
                               charset="UTF-8"
                               http-method="GET"
                               reply-channel="weatherResultChannel"
                               url-expression="${openweathermap.host}"
                               request-channel="wsOutboundChannel"
                               expected-response-type="com.edu.sandbox.weather.domain.WeatherPrediction">

        <int:poller max-messages-per-poll="2" time-unit="MILLISECONDS" fixed-rate="10000"/>

        <int-http:uri-variable name="city" expression="headers.get(@cityKey)"/>
        <int-http:uri-variable name="appid" expression="headers.get(@appIDKey)"/>
        <int-http:uri-variable name="country" expression="headers.get(@countryKey)"/>
    </int-http:outbound-gateway>

    <!--    <util:list id="converters">-->
    <!--        <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />-->
    <!--        <bean class="org.springframework.http.converter.StringHttpMessageConverter" />-->
    <!--        <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />-->
    <!--    </util:list>-->

    <int:publish-subscribe-channel id="weatherResultChannel"
                                   max-subscribers="2"
                                   datatype="com.edu.sandbox.weather.domain.WeatherPrediction"/>

    <bean id="executor" class="org.springframework.scheduling.config.TaskExecutorFactoryBean"/>


    <int:channel id="infoChannel"/>
    <int:service-activator input-channel="weatherResultChannel"
                           id="infoService"
                           method="printData"
                           ref="infoServiceActivator"/>
    <bean id="infoServiceActivator" class="com.edu.sandbox.weather.serviceactivators.InfoServiceActivator"/>


    <!--    <int:publish-subscribe-channel id="errorChannel" error-handler="errorHandler" task-executor="executor"/>-->

</beans>